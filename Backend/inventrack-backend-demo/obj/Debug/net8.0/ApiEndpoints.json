[
  {
    "ContainingType": "inventrack_backend_demo.Controllers.AuditLogController",
    "Method": "GetAuditLogs",
    "RelativePath": "api/AuditLog",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "fromDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "toDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "entityType",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "userId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.AuditLogDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.AuditLogController",
    "Method": "CreateAuditLog",
    "RelativePath": "api/AuditLog",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "auditLogDto",
        "Type": "inventrack_backend_demo.DTOs.AuditLogDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.AuditLogDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.CustomerController",
    "Method": "GetAllCustomers",
    "RelativePath": "api/Customer",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.CustomerDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.CustomerController",
    "Method": "CreateCustomer",
    "RelativePath": "api/Customer",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerCreateDto",
        "Type": "inventrack_backend_demo.DTOs.CustomerCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.CustomerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.CustomerController",
    "Method": "GetCustomerById",
    "RelativePath": "api/Customer/{customerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.CustomerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.CustomerController",
    "Method": "UpdateCustomer",
    "RelativePath": "api/Customer/{customerId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "customerDto",
        "Type": "inventrack_backend_demo.DTOs.CustomerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.CustomerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.CustomerController",
    "Method": "DeleteCustomer",
    "RelativePath": "api/Customer/{customerId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.CustomerFeedbackController",
    "Method": "CreateFeedback",
    "RelativePath": "api/CustomerFeedback",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "feedbackDto",
        "Type": "inventrack_backend_demo.DTOs.CustomerFeedbackDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.CustomerFeedbackDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.CustomerFeedbackController",
    "Method": "GetFeedbackById",
    "RelativePath": "api/CustomerFeedback/{feedbackId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "feedbackId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.CustomerFeedbackDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.CustomerFeedbackController",
    "Method": "UpdateFeedbackResponse",
    "RelativePath": "api/CustomerFeedback/{feedbackId}/response",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "feedbackId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "response",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.CustomerFeedbackDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.CustomerFeedbackController",
    "Method": "GetFeedbackByCustomer",
    "RelativePath": "api/CustomerFeedback/customer/{customerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.CustomerFeedbackDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.CustomerFeedbackController",
    "Method": "GetFeedbackByProduct",
    "RelativePath": "api/CustomerFeedback/product/{productId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.CustomerFeedbackDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.CustomerMembershipController",
    "Method": "CreateOrUpdateMembership",
    "RelativePath": "api/CustomerMembership",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "membershipDto",
        "Type": "inventrack_backend_demo.DTOs.CustomerMembershipDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.CustomerMembershipDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.CustomerMembershipController",
    "Method": "GetMembershipByCustomer",
    "RelativePath": "api/CustomerMembership/customer/{customerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.CustomerMembershipDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.DashboardWidgetController",
    "Method": "CreateWidget",
    "RelativePath": "api/DashboardWidget",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "widgetDto",
        "Type": "inventrack_backend_demo.DTOs.DashboardWidgetDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.DashboardWidgetDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.DashboardWidgetController",
    "Method": "GetWidgetById",
    "RelativePath": "api/DashboardWidget/{widgetId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "widgetId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.DashboardWidgetDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.DashboardWidgetController",
    "Method": "UpdateWidget",
    "RelativePath": "api/DashboardWidget/{widgetId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "widgetId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "widgetDto",
        "Type": "inventrack_backend_demo.DTOs.DashboardWidgetDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.DashboardWidgetDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.DashboardWidgetController",
    "Method": "DeleteWidget",
    "RelativePath": "api/DashboardWidget/{widgetId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "widgetId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.DashboardWidgetController",
    "Method": "GetWidgetsByUser",
    "RelativePath": "api/DashboardWidget/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.DashboardWidgetDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.DeliveryController",
    "Method": "CreateDelivery",
    "RelativePath": "api/Delivery",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "deliveryDto",
        "Type": "inventrack_backend_demo.DTOs.DeliveryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.DeliveryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.DeliveryController",
    "Method": "GetDeliveryById",
    "RelativePath": "api/Delivery/{deliveryId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "deliveryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.DeliveryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.DeliveryController",
    "Method": "UpdateDelivery",
    "RelativePath": "api/Delivery/{deliveryId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "deliveryId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "deliveryDto",
        "Type": "inventrack_backend_demo.DTOs.DeliveryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.DeliveryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.DeliveryController",
    "Method": "GetDeliveriesByShipment",
    "RelativePath": "api/Delivery/shipment/{shipmentId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shipmentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.DeliveryDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.IntegrationConfigController",
    "Method": "CreateConfig",
    "RelativePath": "api/IntegrationConfig",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "configDto",
        "Type": "inventrack_backend_demo.DTOs.IntegrationConfigDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.IntegrationConfigDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.IntegrationConfigController",
    "Method": "GetConfigById",
    "RelativePath": "api/IntegrationConfig/{configId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "configId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.IntegrationConfigDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.IntegrationConfigController",
    "Method": "UpdateConfig",
    "RelativePath": "api/IntegrationConfig/{configId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "configId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "configDto",
        "Type": "inventrack_backend_demo.DTOs.IntegrationConfigDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.IntegrationConfigDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.IntegrationConfigController",
    "Method": "DeleteConfig",
    "RelativePath": "api/IntegrationConfig/{configId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "configId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.IntegrationConfigController",
    "Method": "GetConfigsByPartner",
    "RelativePath": "api/IntegrationConfig/partner/{partnerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "partnerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.IntegrationConfigDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.IntegrationPartnerController",
    "Method": "GetAllPartners",
    "RelativePath": "api/IntegrationPartner",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.IntegrationPartnerDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.IntegrationPartnerController",
    "Method": "CreatePartner",
    "RelativePath": "api/IntegrationPartner",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "partnerDto",
        "Type": "inventrack_backend_demo.DTOs.IntegrationPartnerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.IntegrationPartnerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.IntegrationPartnerController",
    "Method": "GetPartnerById",
    "RelativePath": "api/IntegrationPartner/{partnerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "partnerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.IntegrationPartnerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.IntegrationPartnerController",
    "Method": "UpdatePartner",
    "RelativePath": "api/IntegrationPartner/{partnerId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "partnerId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "partnerDto",
        "Type": "inventrack_backend_demo.DTOs.IntegrationPartnerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.IntegrationPartnerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.IntegrationPartnerController",
    "Method": "DeletePartner",
    "RelativePath": "api/IntegrationPartner/{partnerId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "partnerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.InventoryController",
    "Method": "CreateInventory",
    "RelativePath": "api/Inventory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "inventoryDto",
        "Type": "inventrack_backend_demo.DTOs.InventoryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.InventoryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.InventoryController",
    "Method": "GetInventoryById",
    "RelativePath": "api/Inventory/{inventoryId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "inventoryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.InventoryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.InventoryController",
    "Method": "UpdateInventory",
    "RelativePath": "api/Inventory/{inventoryId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "inventoryId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "inventoryUpdateDto",
        "Type": "inventrack_backend_demo.DTOs.InventoryUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.InventoryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.InventoryController",
    "Method": "DeleteInventory",
    "RelativePath": "api/Inventory/{inventoryId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "inventoryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.InventoryController",
    "Method": "GetInventoryByLocation",
    "RelativePath": "api/Inventory/location/{locationId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "locationId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.InventoryDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.InventoryController",
    "Method": "GetInventoryByProduct",
    "RelativePath": "api/Inventory/product/{productId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.InventoryDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.InventoryController",
    "Method": "GetInventoryByWarehouse",
    "RelativePath": "api/Inventory/warehouse/{warehouseId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "warehouseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.InventoryDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.InventoryStatisticsController",
    "Method": "GetInventoryStatistics",
    "RelativePath": "api/InventoryStatistics",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "startDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "productId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "warehouseId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.InventoryStatisticsDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.InventoryTransactionController",
    "Method": "CreateTransaction",
    "RelativePath": "api/InventoryTransaction",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "transactionDto",
        "Type": "inventrack_backend_demo.DTOs.InventoryTransactionDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.InventoryTransactionDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.InventoryTransactionController",
    "Method": "GetTransactionsByDateRange",
    "RelativePath": "api/InventoryTransaction/daterange",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "startDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.InventoryTransactionDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.InventoryTransactionController",
    "Method": "GetTransactionsByInventory",
    "RelativePath": "api/InventoryTransaction/inventory/{inventoryId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "inventoryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.InventoryTransactionDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderController",
    "Method": "CreateOrder",
    "RelativePath": "api/Order",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderCreateDto",
        "Type": "inventrack_backend_demo.DTOs.OrderCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.OrderDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderController",
    "Method": "GetOrderById",
    "RelativePath": "api/Order/{orderId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.OrderDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderController",
    "Method": "UpdateOrder",
    "RelativePath": "api/Order/{orderId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "orderDto",
        "Type": "inventrack_backend_demo.DTOs.OrderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.OrderDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderController",
    "Method": "CancelOrder",
    "RelativePath": "api/Order/{orderId}/cancel",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderController",
    "Method": "GetOrdersByCustomer",
    "RelativePath": "api/Order/customer/{customerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.OrderDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderController",
    "Method": "GetOrdersByStatus",
    "RelativePath": "api/Order/status/{status}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.OrderDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderItemController",
    "Method": "GetOrderItemById",
    "RelativePath": "api/OrderItem/{orderItemId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderItemId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.OrderItemDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderItemController",
    "Method": "UpdateOrderItemStatus",
    "RelativePath": "api/OrderItem/{orderItemId}/status",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderItemId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.OrderItemDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderItemController",
    "Method": "GetOrderItemsByOrder",
    "RelativePath": "api/OrderItem/order/{orderId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.OrderItemDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderShipmentController",
    "Method": "CreateShipment",
    "RelativePath": "api/OrderShipment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shipmentDto",
        "Type": "inventrack_backend_demo.DTOs.OrderShipmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.OrderShipmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderShipmentController",
    "Method": "GetShipmentById",
    "RelativePath": "api/OrderShipment/{shipmentId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shipmentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.OrderShipmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderShipmentController",
    "Method": "UpdateShipment",
    "RelativePath": "api/OrderShipment/{shipmentId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shipmentId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "shipmentDto",
        "Type": "inventrack_backend_demo.DTOs.OrderShipmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.OrderShipmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderShipmentController",
    "Method": "GetShipmentsByOrder",
    "RelativePath": "api/OrderShipment/order/{orderId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.OrderShipmentDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderStatusController",
    "Method": "AddOrderStatus",
    "RelativePath": "api/OrderStatus",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "statusCreateDto",
        "Type": "inventrack_backend_demo.Controllers.OrderStatusCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.OrderStatusDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.OrderStatusController",
    "Method": "GetStatusHistoryByOrder",
    "RelativePath": "api/OrderStatus/order/{orderId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.OrderStatusDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PaymentController",
    "Method": "CreatePayment",
    "RelativePath": "api/Payment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "paymentDto",
        "Type": "inventrack_backend_demo.DTOs.PaymentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.PaymentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PaymentController",
    "Method": "GetPaymentById",
    "RelativePath": "api/Payment/{paymentId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "paymentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.PaymentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PaymentController",
    "Method": "GetPaymentsByOrder",
    "RelativePath": "api/Payment/order/{orderId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.PaymentDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PermissionController",
    "Method": "GetAllPermissions",
    "RelativePath": "api/Permission",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.PermissionDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PermissionController",
    "Method": "CreatePermission",
    "RelativePath": "api/Permission",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "permissionDto",
        "Type": "inventrack_backend_demo.DTOs.PermissionDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.PermissionDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PermissionController",
    "Method": "GetPermissionById",
    "RelativePath": "api/Permission/{permissionId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "permissionId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.PermissionDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PermissionController",
    "Method": "UpdatePermission",
    "RelativePath": "api/Permission/{permissionId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "permissionId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "permissionDto",
        "Type": "inventrack_backend_demo.DTOs.PermissionDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.PermissionDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PermissionController",
    "Method": "DeletePermission",
    "RelativePath": "api/Permission/{permissionId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "permissionId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductController",
    "Method": "GetAllProducts",
    "RelativePath": "api/Product",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.ProductDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductController",
    "Method": "CreateProduct",
    "RelativePath": "api/Product",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productCreateDto",
        "Type": "inventrack_backend_demo.DTOs.ProductCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductController",
    "Method": "GetProductById",
    "RelativePath": "api/Product/{productId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductController",
    "Method": "UpdateProduct",
    "RelativePath": "api/Product/{productId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "productUpdateDto",
        "Type": "inventrack_backend_demo.DTOs.ProductUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductController",
    "Method": "DeleteProduct",
    "RelativePath": "api/Product/{productId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductController",
    "Method": "GetProductsByCategory",
    "RelativePath": "api/Product/category/{categoryId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.ProductDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductAttributeController",
    "Method": "GetAllAttributes",
    "RelativePath": "api/ProductAttribute",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.ProductAttributeDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductAttributeController",
    "Method": "CreateAttribute",
    "RelativePath": "api/ProductAttribute",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "attributeDto",
        "Type": "inventrack_backend_demo.DTOs.ProductAttributeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductAttributeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductAttributeController",
    "Method": "GetAttributeById",
    "RelativePath": "api/ProductAttribute/{attributeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "attributeId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductAttributeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductAttributeController",
    "Method": "UpdateAttribute",
    "RelativePath": "api/ProductAttribute/{attributeId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "attributeId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "attributeDto",
        "Type": "inventrack_backend_demo.DTOs.ProductAttributeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductAttributeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductAttributeController",
    "Method": "DeleteAttribute",
    "RelativePath": "api/ProductAttribute/{attributeId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "attributeId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductAttributeValueController",
    "Method": "CreateAttributeValue",
    "RelativePath": "api/ProductAttributeValue",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "attributeValueCreateDto",
        "Type": "inventrack_backend_demo.DTOs.ProductAttributeValueCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductAttributeValueDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductAttributeValueController",
    "Method": "GetAttributeValueById",
    "RelativePath": "api/ProductAttributeValue/{valueId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "valueId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductAttributeValueDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductAttributeValueController",
    "Method": "UpdateAttributeValue",
    "RelativePath": "api/ProductAttributeValue/{valueId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "valueId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "attributeValueDto",
        "Type": "inventrack_backend_demo.DTOs.ProductAttributeValueDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductAttributeValueDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductAttributeValueController",
    "Method": "DeleteAttributeValue",
    "RelativePath": "api/ProductAttributeValue/{valueId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "valueId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductAttributeValueController",
    "Method": "GetAttributeValuesByProduct",
    "RelativePath": "api/ProductAttributeValue/product/{productId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.ProductAttributeValueDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductCategoryController",
    "Method": "GetAllCategories",
    "RelativePath": "api/ProductCategory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.ProductCategoryDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductCategoryController",
    "Method": "CreateCategory",
    "RelativePath": "api/ProductCategory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryCreateDto",
        "Type": "inventrack_backend_demo.DTOs.ProductCategoryCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductCategoryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductCategoryController",
    "Method": "GetCategoryById",
    "RelativePath": "api/ProductCategory/{categoryId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductCategoryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductCategoryController",
    "Method": "UpdateCategory",
    "RelativePath": "api/ProductCategory/{categoryId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "categoryDto",
        "Type": "inventrack_backend_demo.DTOs.ProductCategoryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductCategoryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductCategoryController",
    "Method": "DeleteCategory",
    "RelativePath": "api/ProductCategory/{categoryId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductCategoryController",
    "Method": "GetChildCategories",
    "RelativePath": "api/ProductCategory/children/{parentCategoryId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "parentCategoryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.ProductCategoryDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductVariantController",
    "Method": "CreateVariant",
    "RelativePath": "api/ProductVariant",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "variantCreateDto",
        "Type": "inventrack_backend_demo.DTOs.ProductVariantCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductVariantDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductVariantController",
    "Method": "GetVariantById",
    "RelativePath": "api/ProductVariant/{variantId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "variantId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductVariantDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductVariantController",
    "Method": "UpdateVariant",
    "RelativePath": "api/ProductVariant/{variantId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "variantId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "variantDto",
        "Type": "inventrack_backend_demo.DTOs.ProductVariantDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ProductVariantDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductVariantController",
    "Method": "DeleteVariant",
    "RelativePath": "api/ProductVariant/{variantId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "variantId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ProductVariantController",
    "Method": "GetVariantsByProduct",
    "RelativePath": "api/ProductVariant/product/{productId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.ProductVariantDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PurchaseOrderController",
    "Method": "CreatePurchaseOrder",
    "RelativePath": "api/PurchaseOrder",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "purchaseOrderCreateDto",
        "Type": "inventrack_backend_demo.DTOs.PurchaseOrderCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.PurchaseOrderDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PurchaseOrderController",
    "Method": "GetPurchaseOrderById",
    "RelativePath": "api/PurchaseOrder/{poId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "poId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.PurchaseOrderDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PurchaseOrderController",
    "Method": "UpdatePurchaseOrder",
    "RelativePath": "api/PurchaseOrder/{poId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "poId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "purchaseOrderDto",
        "Type": "inventrack_backend_demo.DTOs.PurchaseOrderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.PurchaseOrderDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PurchaseOrderController",
    "Method": "DeletePurchaseOrder",
    "RelativePath": "api/PurchaseOrder/{poId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "poId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PurchaseOrderController",
    "Method": "GetPurchaseOrdersByStatus",
    "RelativePath": "api/PurchaseOrder/status/{status}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.PurchaseOrderDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.PurchaseOrderController",
    "Method": "GetPurchaseOrdersBySupplier",
    "RelativePath": "api/PurchaseOrder/supplier/{supplierId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplierId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.PurchaseOrderDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ReportController",
    "Method": "GetAllReports",
    "RelativePath": "api/Report",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.ReportDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ReportController",
    "Method": "CreateReport",
    "RelativePath": "api/Report",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reportDto",
        "Type": "inventrack_backend_demo.DTOs.ReportDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ReportDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ReportController",
    "Method": "GetReportById",
    "RelativePath": "api/Report/{reportId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reportId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ReportDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ReportController",
    "Method": "UpdateReport",
    "RelativePath": "api/Report/{reportId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reportId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "reportDto",
        "Type": "inventrack_backend_demo.DTOs.ReportDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ReportDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ReportController",
    "Method": "DeleteReport",
    "RelativePath": "api/Report/{reportId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reportId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ReturnController",
    "Method": "CreateReturn",
    "RelativePath": "api/Return",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "returnDto",
        "Type": "inventrack_backend_demo.DTOs.ReturnDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ReturnDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ReturnController",
    "Method": "GetReturnById",
    "RelativePath": "api/Return/{returnId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "returnId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ReturnDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ReturnController",
    "Method": "UpdateReturn",
    "RelativePath": "api/Return/{returnId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "returnId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "returnDto",
        "Type": "inventrack_backend_demo.DTOs.ReturnDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ReturnDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ReturnController",
    "Method": "GetReturnsByOrder",
    "RelativePath": "api/Return/order/{orderId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.ReturnDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.RoleController",
    "Method": "GetAllRoles",
    "RelativePath": "api/Role",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.RoleDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.RoleController",
    "Method": "CreateRole",
    "RelativePath": "api/Role",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleCreateDto",
        "Type": "inventrack_backend_demo.DTOs.RoleCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.RoleDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.RoleController",
    "Method": "GetRoleById",
    "RelativePath": "api/Role/{roleId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.RoleDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.RoleController",
    "Method": "UpdateRole",
    "RelativePath": "api/Role/{roleId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "roleUpdateDto",
        "Type": "inventrack_backend_demo.DTOs.RoleUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.RoleDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.RoleController",
    "Method": "DeleteRole",
    "RelativePath": "api/Role/{roleId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.RoleController",
    "Method": "GetRolePermissions",
    "RelativePath": "api/Role/{roleId}/permissions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.PermissionDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.RoleController",
    "Method": "AssignPermissionsToRole",
    "RelativePath": "api/Role/{roleId}/permissions",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "permissionIds",
        "Type": "System.Collections.Generic.List\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SalesStatisticsController",
    "Method": "GetSalesStatistics",
    "RelativePath": "api/SalesStatistics",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "startDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "productId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "categoryId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "warehouseId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.SalesStatisticsDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ShipmentController",
    "Method": "CreateShipment",
    "RelativePath": "api/Shipment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shipmentDto",
        "Type": "inventrack_backend_demo.DTOs.ShipmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ShipmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ShipmentController",
    "Method": "GetShipmentById",
    "RelativePath": "api/Shipment/{shipmentId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shipmentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ShipmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ShipmentController",
    "Method": "UpdateShipment",
    "RelativePath": "api/Shipment/{shipmentId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shipmentId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "shipmentDto",
        "Type": "inventrack_backend_demo.DTOs.ShipmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.ShipmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.ShipmentController",
    "Method": "GetShipmentsByPurchaseOrder",
    "RelativePath": "api/Shipment/purchaseorder/{poId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "poId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.ShipmentDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.StorageLocationController",
    "Method": "CreateLocation",
    "RelativePath": "api/StorageLocation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "locationCreateDto",
        "Type": "inventrack_backend_demo.DTOs.StorageLocationCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.StorageLocationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.StorageLocationController",
    "Method": "GetLocationById",
    "RelativePath": "api/StorageLocation/{locationId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "locationId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.StorageLocationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.StorageLocationController",
    "Method": "UpdateLocation",
    "RelativePath": "api/StorageLocation/{locationId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "locationId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "locationDto",
        "Type": "inventrack_backend_demo.DTOs.StorageLocationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.StorageLocationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.StorageLocationController",
    "Method": "DeleteLocation",
    "RelativePath": "api/StorageLocation/{locationId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "locationId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.StorageLocationController",
    "Method": "GetLocationsByZone",
    "RelativePath": "api/StorageLocation/zone/{zoneId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "zoneId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.StorageLocationDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SupplierController",
    "Method": "GetAllSuppliers",
    "RelativePath": "api/Supplier",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.SupplierDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SupplierController",
    "Method": "CreateSupplier",
    "RelativePath": "api/Supplier",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplierCreateDto",
        "Type": "inventrack_backend_demo.DTOs.SupplierCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.SupplierDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SupplierController",
    "Method": "GetSupplierById",
    "RelativePath": "api/Supplier/{supplierId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplierId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.SupplierDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SupplierController",
    "Method": "UpdateSupplier",
    "RelativePath": "api/Supplier/{supplierId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplierId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "supplierDto",
        "Type": "inventrack_backend_demo.DTOs.SupplierDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.SupplierDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SupplierController",
    "Method": "DeleteSupplier",
    "RelativePath": "api/Supplier/{supplierId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplierId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SupplierPerformanceController",
    "Method": "CreatePerformanceRecord",
    "RelativePath": "api/SupplierPerformance",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "performanceDto",
        "Type": "inventrack_backend_demo.DTOs.SupplierPerformanceDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.SupplierPerformanceDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SupplierPerformanceController",
    "Method": "GetPerformanceRecordsBySupplier",
    "RelativePath": "api/SupplierPerformance/supplier/{supplierId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplierId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.SupplierPerformanceDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SupplierProductController",
    "Method": "CreateSupplierProduct",
    "RelativePath": "api/SupplierProduct",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplierProductCreateDto",
        "Type": "inventrack_backend_demo.DTOs.SupplierProductCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.SupplierProductDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SupplierProductController",
    "Method": "GetSupplierProductById",
    "RelativePath": "api/SupplierProduct/{supplierProductId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplierProductId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.SupplierProductDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SupplierProductController",
    "Method": "UpdateSupplierProduct",
    "RelativePath": "api/SupplierProduct/{supplierProductId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplierProductId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "supplierProductDto",
        "Type": "inventrack_backend_demo.DTOs.SupplierProductDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.SupplierProductDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SupplierProductController",
    "Method": "DeleteSupplierProduct",
    "RelativePath": "api/SupplierProduct/{supplierProductId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplierProductId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SupplierProductController",
    "Method": "GetProductsBySupplier",
    "RelativePath": "api/SupplierProduct/supplier/{supplierId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplierId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.SupplierProductDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SyncStatusController",
    "Method": "CreateSyncStatus",
    "RelativePath": "api/SyncStatus",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "syncStatusDto",
        "Type": "inventrack_backend_demo.DTOs.SyncStatusDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.SyncStatusDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SyncStatusController",
    "Method": "GetSyncStatusesByPartner",
    "RelativePath": "api/SyncStatus/partner/{partnerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "partnerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.SyncStatusDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.SyncStatusController",
    "Method": "GetLatestSyncStatus",
    "RelativePath": "api/SyncStatus/partner/{partnerId}/entity/{entityType}/latest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "partnerId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "entityType",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.SyncStatusDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.UserDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.UserController",
    "Method": "CreateUser",
    "RelativePath": "api/User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userCreateDto",
        "Type": "inventrack_backend_demo.DTOs.UserCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.UserController",
    "Method": "GetUserById",
    "RelativePath": "api/User/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "userUpdateDto",
        "Type": "inventrack_backend_demo.DTOs.UserUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.UserController",
    "Method": "GetUserProfile",
    "RelativePath": "api/User/{userId}/profile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.UserProfileDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.UserController",
    "Method": "UpdateUserProfile",
    "RelativePath": "api/User/{userId}/profile",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "profileUpdateDto",
        "Type": "inventrack_backend_demo.DTOs.UserProfileUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.UserProfileDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.UserRoleController",
    "Method": "AssignRoleToUser",
    "RelativePath": "api/UserRole",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "assignDto",
        "Type": "inventrack_backend_demo.Controllers.UserRoleAssignDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.UserRoleDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.UserRoleController",
    "Method": "RemoveRoleFromUser",
    "RelativePath": "api/UserRole/{userRoleId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userRoleId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.UserRoleController",
    "Method": "GetUserRoles",
    "RelativePath": "api/UserRole/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.UserRoleDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseController",
    "Method": "GetAllWarehouses",
    "RelativePath": "api/Warehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.WarehouseDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseController",
    "Method": "CreateWarehouse",
    "RelativePath": "api/Warehouse",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "warehouseCreateDto",
        "Type": "inventrack_backend_demo.DTOs.WarehouseCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WarehouseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseController",
    "Method": "GetWarehouseById",
    "RelativePath": "api/Warehouse/{warehouseId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "warehouseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WarehouseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseController",
    "Method": "UpdateWarehouse",
    "RelativePath": "api/Warehouse/{warehouseId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "warehouseId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "warehouseUpdateDto",
        "Type": "inventrack_backend_demo.DTOs.WarehouseUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WarehouseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseController",
    "Method": "DeleteWarehouse",
    "RelativePath": "api/Warehouse/{warehouseId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "warehouseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseWorkerController",
    "Method": "CreateWorker",
    "RelativePath": "api/WarehouseWorker",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "workerCreateDto",
        "Type": "inventrack_backend_demo.DTOs.WarehouseWorkerCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WarehouseWorkerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseWorkerController",
    "Method": "GetWorkerById",
    "RelativePath": "api/WarehouseWorker/{workerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "workerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WarehouseWorkerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseWorkerController",
    "Method": "UpdateWorker",
    "RelativePath": "api/WarehouseWorker/{workerId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "workerId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "workerDto",
        "Type": "inventrack_backend_demo.DTOs.WarehouseWorkerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WarehouseWorkerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseWorkerController",
    "Method": "DeleteWorker",
    "RelativePath": "api/WarehouseWorker/{workerId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "workerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseWorkerController",
    "Method": "GetWorkersByWarehouse",
    "RelativePath": "api/WarehouseWorker/warehouse/{warehouseId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "warehouseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.WarehouseWorkerDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseZoneController",
    "Method": "CreateZone",
    "RelativePath": "api/WarehouseZone",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "zoneCreateDto",
        "Type": "inventrack_backend_demo.DTOs.WarehouseZoneCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WarehouseZoneDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseZoneController",
    "Method": "GetZoneById",
    "RelativePath": "api/WarehouseZone/{zoneId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "zoneId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WarehouseZoneDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseZoneController",
    "Method": "UpdateZone",
    "RelativePath": "api/WarehouseZone/{zoneId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "zoneId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "zoneDto",
        "Type": "inventrack_backend_demo.DTOs.WarehouseZoneDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WarehouseZoneDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseZoneController",
    "Method": "DeleteZone",
    "RelativePath": "api/WarehouseZone/{zoneId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "zoneId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WarehouseZoneController",
    "Method": "GetZonesByWarehouse",
    "RelativePath": "api/WarehouseZone/warehouse/{warehouseId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "warehouseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.WarehouseZoneDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WishlistController",
    "Method": "CreateWishlist",
    "RelativePath": "api/Wishlist",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "wishlistCreateDto",
        "Type": "inventrack_backend_demo.DTOs.WishlistCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WishlistDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WishlistController",
    "Method": "GetWishlistById",
    "RelativePath": "api/Wishlist/{wishlistId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "wishlistId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WishlistDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WishlistController",
    "Method": "DeleteWishlist",
    "RelativePath": "api/Wishlist/{wishlistId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "wishlistId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WishlistController",
    "Method": "GetWishlistsByCustomer",
    "RelativePath": "api/Wishlist/customer/{customerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.WishlistDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WishlistItemController",
    "Method": "AddItemToWishlist",
    "RelativePath": "api/WishlistItem",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "wishlistItemCreateDto",
        "Type": "inventrack_backend_demo.DTOs.WishlistItemCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WishlistItemDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WishlistItemController",
    "Method": "GetWishlistItemById",
    "RelativePath": "api/WishlistItem/{wishlistItemId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "wishlistItemId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WishlistItemDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WishlistItemController",
    "Method": "RemoveItemFromWishlist",
    "RelativePath": "api/WishlistItem/{wishlistItemId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "wishlistItemId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WorkerShiftController",
    "Method": "CreateShift",
    "RelativePath": "api/WorkerShift",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shiftCreateDto",
        "Type": "inventrack_backend_demo.DTOs.WorkerShiftCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WorkerShiftDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WorkerShiftController",
    "Method": "GetShiftById",
    "RelativePath": "api/WorkerShift/{shiftId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shiftId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WorkerShiftDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WorkerShiftController",
    "Method": "UpdateShift",
    "RelativePath": "api/WorkerShift/{shiftId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shiftId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "shiftDto",
        "Type": "inventrack_backend_demo.DTOs.WorkerShiftDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WorkerShiftDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WorkerShiftController",
    "Method": "DeleteShift",
    "RelativePath": "api/WorkerShift/{shiftId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shiftId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WorkerShiftController",
    "Method": "GetShiftsByWorker",
    "RelativePath": "api/WorkerShift/worker/{workerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "workerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.WorkerShiftDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WorkerTaskController",
    "Method": "CreateTask",
    "RelativePath": "api/WorkerTask",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "taskCreateDto",
        "Type": "inventrack_backend_demo.DTOs.WorkerTaskCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WorkerTaskDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WorkerTaskController",
    "Method": "GetTaskById",
    "RelativePath": "api/WorkerTask/{taskId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "taskId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WorkerTaskDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WorkerTaskController",
    "Method": "UpdateTask",
    "RelativePath": "api/WorkerTask/{taskId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "taskId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "taskDto",
        "Type": "inventrack_backend_demo.DTOs.WorkerTaskDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "inventrack_backend_demo.DTOs.WorkerTaskDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WorkerTaskController",
    "Method": "DeleteTask",
    "RelativePath": "api/WorkerTask/{taskId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "taskId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WorkerTaskController",
    "Method": "GetTasksByWarehouse",
    "RelativePath": "api/WorkerTask/warehouse/{warehouseId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "warehouseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.WorkerTaskDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WorkerTaskController",
    "Method": "GetTasksByWorker",
    "RelativePath": "api/WorkerTask/worker/{workerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "workerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[inventrack_backend_demo.DTOs.WorkerTaskDto, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "inventrack_backend_demo.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[inventrack_backend_demo.WeatherForecast, inventrack-backend-demo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]